library(shiny)
library(leaflet)
ui <- fluidPage(
h3("Choisir un cinéma aléatoire"),
actionButton("go", "Trouves-moi un cinoche!"),
leafletOutput("show")
)
server <- function(input, output) {
output$show <- renderLeaflet({
input$go
isolate({
rand_cine <- sample_n(data_cine, 1)
leaflet(options = leafletOptions(dragging = TRUE,
minZoom = 11,
maxZoom = 18),
width = "100%",
height = 500) %>%
addProviderTiles("CartoDB.DarkMatter") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addPopups(lng = rand_cine$lon, lat = rand_cine$lat, popup = rand_cine$name)
})
})
}
shinyApp(ui, server)
?isolate()
library(shiny)
library(leaflet)
ui <- fluidPage(
h3("Choisir un cinéma aléatoire"),
actionButton("run", "Trouves-moi un cinoche!"),
leafletOutput("show")
)
server <- function(input, output) {
output$show <- renderLeaflet({
input$run
isolate({
rand_cine <- sample_n(data_cine, 1)
leaflet(options = leafletOptions(dragging = TRUE,
minZoom = 11,
maxZoom = 18),
width = "100%",
height = 500) %>%
addProviderTiles("CartoDB.DarkMatter") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addPopups(data = rand_cine, lng = ~lon, lat = ~lat, popup = ~name)
})
})
}
shinyApp(ui, server)
View(data_arr)
library(dplyr)
library(sf)
data_arr <- read_sf("contours-geographiques-des-communes-et-arrondissements-municipaux-2019.shp")
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = data_arr$nom_com,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
leaflet(options = leafletOptions(minZoom = 0, maxZoom = 20), width = "100%", height = 200) %>%
addTiles()
names(providers)[1:10]
library(stringr)
names(providers)[str_detect(names(providers), "OpenStreetMap")]
leaflet(width = "100%", height = 200) %>%
addProviderTiles(provider = "Stamen.Watercolor")
leaflet(width = "100%", height = 200) %>%
addProviderTiles(provider = "CartoDB.DarkMatter")
leaflet(width = "100%", height = 200) %>%
addProviderTiles(provider = "Esri")
leaflet(width = "100%", height = 300) %>%
addTiles() %>%
addWMSTiles("https://geowebservices.stanford.edu/geoserver/ows?SERVICE=WMS&",
layers = "druid:bd357wk9212",
options = WMSTileOptions(format = "image/png",
transparent = TRUE,
attribution = "Standford University")) %>%
setView(lng = 2.35222, lat = 48.85661, zoom = 12)
leaflet(width = "100%", height = 200) %>%
addProviderTiles("CartoDB.DarkMatter") %>%
addProviderTiles("OpenRailwayMap") %>%
setView(lng = 2.35222, lat = 48.85661, zoom = 10)
leaflet(width = "100%", height = 200) %>%
addProviderTiles("CartoDB")
library(ggmap)
geocode("Paris", output = "more", source = "google")
leaflet(width = "100%", height = 200) %>%
addProviderTiles("CartoDB") %>%
setView(lng = 2.35222,
lat = 48.85661,
zoom = 13)
leaflet(width = "100%", height = 200) %>%
addProviderTiles("CartoDB") %>%
fitBounds(
lng1 = 2.224, lat1 = 48.902,
lng2 = 2.470, lat2 = 48.816)
leaflet(width = "100%", height = 200,
options = leafletOptions(dragging = FALSE,
minZoom = 10,
maxZoom = 15)) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 13)
library(tibble)
library(leaflet)
# On crée ici un tibble avec trois colonnes
paris_cine <-
tibble(
cine = c("UGC Ciné Cité Les Halles", "MK2 Bibliothèque"),
lon = c(2.3429602367440068, 2.3757256927717196),
lat = c(48.86610420151666, 48.8324335629626))
leaflet(width = "100%", height = 200,
options = leafletOptions(dragging = FALSE,
minZoom = 10,
maxZoom = 15)) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addMarkers(lng = paris_cine$lon, lat = paris_cine$lat)
paris_cine %>%
leaflet(width = "100%", height = 200,
options = leafletOptions(dragging = FALSE,
minZoom = 10,
maxZoom = 15)) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addMarkers()
paris_cine %>%
leaflet(width = "100%", height = 200,
options = leafletOptions(dragging = FALSE,
minZoom = 10,
maxZoom = 15)) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addMarkers(popup = paris_cine$cine)
paris_cine %>%
leaflet(width = "100%", height = 200,
options = leafletOptions(dragging = FALSE,
minZoom = 10,
maxZoom = 15)) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addPopups(popup = paris_cine$cine)
library(dplyr)
stations_ratp <- read.csv("stations_ratp.csv", sep = ";")
df <- stations_ratp %>%
filter(stop_id %in% c("2223","1166827"))
leaflet(data = df,
width = "100%", height = 200) %>%
addProviderTiles("CartoDB") %>%
setView(lng=2.35222, lat = 48.85661, zoom = 11) %>%
addPolylines(lng = ~lon, lat = ~lat) %>%
addPopups(popup = df$stop_name)
library(dplyr)
library(sf)
data_arr <- read_sf("contours-geographiques-des-communes-et-arrondissements-municipaux-2019.shp")
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = data_arr$nom_com,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
pal <- colorNumeric(
palette = "YlGnBu",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = data_arr$nom_com,
fill = TRUE)
pal <- colorNumeric(
palette = "YlGnBu",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = data_arr$population,
stroke = TRUE,
color = "red",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "YlGnBu",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = TRUE,
color = "red",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "plasma",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = TRUE,
color = "red",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Greens",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = TRUE,
color = "red",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Greens",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = TRUE,
color = "black",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = TRUE,
color = "black",
weight = 2,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSe,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Nombre d'habitants par arrondissement - Paris",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population par arr., Paris",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population par arrondissement, Paris",
labFormat = labelFormat(suffix = "habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Blues",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population par arrondissement, Paris",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Reds",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 0.6) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population par arrondissement, Paris",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Reds",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 1) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population par arrondissement, Paris",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Reds",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 1) %>%
addLegend(
"bottomright", pal = pal, values = data_arr$population,
title = "Population de Paris par arrondissement",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Reds",
domain = data_arr$population
)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 1) %>%
addLegend(
"topleft", pal = pal, values = data_arr$population,
title = "Population de Paris par arrondissement",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
pal <- colorNumeric(
palette = "Reds",
domain = data_arr$population
)
leaflet(width = "100%", height = 500) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = data_arr$geometry,
label = paste("Nbr d'habitants:", data_arr$population),
stroke = FALSE,
fill = TRUE,
fillColor = pal(data_arr$population),
fillOpacity = 1) %>%
addLegend(
"topleft", pal = pal, values = data_arr$population,
title = "Population de Paris par arrondissement",
labFormat = labelFormat(suffix = " habitants"),
opacity = 1)
ca <- read_sf("CA_Counties_TIGER2016.shp")
iinstall.packages("sf")
install.packages("sf")
install.packages("dplyr")
ca <- read_sf("CA_Counties_TIGER2016.shp")
library(dplyr)
library(sf)
ca <- read_sf("CA_Counties_TIGER2016.shp")
setwd("~/psbx")
ca <- read_sf("CA_Counties_TIGER2016.shp")
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = ca$geometry,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = ca$geometry,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
library(leaflet)
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = ca$geometry,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
ca <- read_sf("CA_Counties_TIGER2016.shp")
leaflet(width = "100%", height = 300) %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = ca$geometry,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
library(dplyr)
library(sf)
library(leaflet)
ca <- read_sf("CA_Counties_TIGER2016.shp")
leaflet() %>%
addProviderTiles("CartoDB") %>%
addPolygons(
data = ca$geometry,
fill = TRUE,
stroke = TRUE,
color = "red",
weight = 2)
